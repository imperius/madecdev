[buildout]
extends =
    base.cfg
    versions/production-versions.cfg

newest = false

parts +=
    debug-instance
    zeo-server
    backup
    backup-task
    pack-task
    zopepy
    backupcronjob
    varnish-build
    varnish
    nginx
    frontend

#   instance-2

extensions +=
    mr.developer

sources = sources
auto-checkout =
#example
#    dev2.customizations


[project] 
# Change this to the real project name
name = project_name

# Make sure you have these users created or change them
[users]
instance = massi
zeo-server = massi


# Set here the ports and addresses
[addresses]
instance-1 = 8181
# ...
debug-instance = 8180
zeo-server = 127.0.0.1:8100


[sources]
#example (use pull url)
#dev2.customizations = git git://git.abstract.it/development-portal/dev2-customizations.git branch=v0.1


[zeo-server]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}
zeo-address = ${addresses:zeo-server}
#blob-storage = ${buildout:directory}/var/blobstorage
pack-days = 15
effective-user = ${users:zeo-server}
eggs =
    iw.rotatezlogs
    plone.app.blob
zeo-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    path ${buildout:directory}/var/log/${:_buildout_section_name_}.log
    max-bytes 20MB
    backup-count 5
    compression gzip
  </rotatelogfile>


[instance-1]   
http-address = ${addresses:instance-1}
user = admin:admin
zodb-cache-size = 10000
zeo-client-cache-size = 200MB
zeo-client = True
zeo-address = ${addresses:zeo-server}
#blob-storage = ${zeo-server:blob-storage}
#shared-blob = on
debug-mode = off
verbose-security = off
effective-user = ${users:instance}
eggs += iw.rotatezlogs
event-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    path ${buildout:directory}/var/log/${:_buildout_section_name_}.log
    max-bytes 20MB
    backup-count 5
    compression gzip
  </rotatelogfile>
access-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    path ${buildout:directory}/var/log/${:_buildout_section_name_}-Z2.log
    max-bytes 20MB
    backup-count 5
    compression gzip
  </rotatelogfile>

#[instance-2]
#<= instance-1
#http-address = ${addresses:instance-2}

[debug-instance]
recipe = collective.recipe.zope2cluster
instance-clone = instance-1
eggs +=
    Products.PrintingMailHost
    Products.PDBDebugMode
    teamrubber.theoracle
http-address = ${addresses:debug-instance}
debug-mode = on
verbose-security = on
zcml +=
    teamrubber.theoracle
environment-vars = ENABLE_PRINTING_MAILHOST True


[backup]
recipe = collective.recipe.backup
full = True
keep = 10
enable_snapshotrestore = False


[makedirs]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/build/etc/logrotate.d
    ${buildout:directory}/build/etc/cron.daily
    ${buildout:directory}/build/etc/cron.weekly


[backup-task]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/backup-wrapper.in
output = ${buildout:directory}/build/etc/cron.daily/${project:name}-incremental-backups


[pack-task]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/snapshot-pack-wrapper.in
output = ${buildout:directory}/build/etc/cron.weekly/${project:name}-snap-n-pack

[backupcronjob]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${buildout:directory}/bin/backup

[varnish-build]
recipe = zc.recipe.cmmi
url = http://heanet.dl.sourceforge.net/sourceforge/varnish/varnish-2.1.3.tar.gz

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
bind = 0.0.0.0:80
backends = localhost:81
cache-size = 512M

[nginx]
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.3.1.tar.gz
extra_options = --without-http_rewrite_module

[frontend]
recipe = gocept.nginx
hostname = localhost
port = 81
configuration =
	worker_processes 2;
	events {
		worker_connections 1024;
	}
	http {
		upstream localhost {
			server 127.0.0.1:8181;
			}

	server {
		port_in_redirect off;
		listen          81;
		server_name     localhost;
		client_max_body_size 10m;
		access_log      logs/localhost.access.log;

		location / {
			proxy_pass http://localhost; } 
			}

       }

